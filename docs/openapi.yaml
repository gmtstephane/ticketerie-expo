openapi: 3.0.0
info:
  title: Ticketerie API
  version: 1.0.0
paths:
  /api/auth/login/google/native:
    summary: Login with Google
    post:
      operationId: loginWithGoogle
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                idToken:
                  type: string
      responses:
        "200":
          description: User data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TokenResponse"
  /api/auth/refresh-token:
    summary: Refresh token
    post:
      operationId: refreshToken
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                refreshToken:
                  type: string
      responses:
        "200":
          description: User data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TokenResponse"
  /api/user:
    get:
      operationId: getUser
      responses:
        "200":
          description: User data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
  /events:
    get:
      summary: Get list of events
      operationId: getEvents
      parameters:
        - name: id
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
      responses:
        "200":
          description: An array of event descriptions
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/EventDescription"
  /events/{id}:
    get:
      summary: Get event by ID
      operationId: getEventById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Event details
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Event"
        "404":
          description: Event not found
  /teams/{id}:
    get:
      summary: Get team by ID
      operationId: getTeamById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Event details
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TeamDetail"
        "404":
          description: Event not found
  /teams/search:
    get:
      summary: Search teams
      operationId: searchTeams
      parameters:
        - name: name
          in: query
          required: true
          schema:
            type: string
      responses:
        "200":
          description: An array of team descriptions
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/SearchTeam"
  /events/search:
    get:
      summary: Search events
      operationId: searchEvents
      parameters:
        - name: name
          in: query
          required: true
          schema:
            type: string
      responses:
        "200":
          description: An array of event descriptions
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/SearchEvent"
components:
  schemas:
    EventType:
      type: string
      enum:
        - Event
        - Individual
        - Team
    TokenResponse:
      type: object
      required:
        - token
        - refreshToken
      properties:
        token:
          type: string
        refreshToken:
          type: string
    User:
      type: object
      properties:
        id:
          type: integer
        providerId:
          type: string
        provider:
          type: string
        userType:
          type: string
        email:
          type: string
        name:
          type: string
        givenName:
          type: string
        familyName:
          type: string
        picture:
          type: string
        locale:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
          nullable: true
        iat:
          type: integer
        exp:
          type: integer
    EventDescription:
      type: object
      required:
        - id
        - name
        - championship
        - icon
        - location
        - sport
        - type
        - min_price
        - date
        - latitude
        - longitude
      properties:
        id:
          type: string
        name:
          type: string
        championship:
          type: string
        icon:
          type: string
        location:
          type: string
        latitude:
          type: number
        longitude:
          type: number
        sport:
          type: string
        type:
          $ref: "#/components/schemas/EventType"
        min_price:
          type: number
        date:
          type: string
    Location:
      type: object
      required:
        - id
        - name
        - address
        - city
        - state
        - country
        - zipcode
        - latitude
        - longitude
        - commonSports
        - createdAt
        - updatedAt
      properties:
        id:
          type: integer
        name:
          type: string
        address:
          type: string
        city:
          type: string
        state:
          type: string
        country:
          type: string
        zipcode:
          type: integer
        latitude:
          type: number
          format: double
        longitude:
          type: number
          format: double
        commonSports:
          type: array
          items:
            type: integer
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
          nullable: true
    Sport:
      type: object
      required:
        - id
        - name
        - type
        - createdAt
        - updatedAt
      properties:
        id:
          type: integer
        name:
          type: string
        type:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
          nullable: true
    Championship:
      type: object
      required:
        - id
        - name
        - sportId
        - icon
        - createdAt
        - updatedAt
      properties:
        id:
          type: integer
        name:
          type: string
        sportId:
          type: integer
        icon:
          type: string
          format: uri
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
          nullable: true
    Team:
      type: object
      required:
        - id
        - name
        - sportId
        - locationId
        - icon
        - championships
        - createdAt
        - updatedAt
      properties:
        id:
          type: integer
        name:
          type: string
        sportId:
          type: integer
        locationId:
          type: integer
        icon:
          type: string
          format: uri
        championships:
          type: array
          items:
            type: integer
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
          nullable: true
    Ticket:
      type: object
      required:
        - id
        - eventId
        - ticketingId
        - price
        - url
        - createdAt
        - ticketing
      properties:
        id:
          type: integer
        eventId:
          type: string
        ticketingId:
          type: integer
        ticketing:
          $ref: "#/components/schemas/Ticketing"
        price:
          type: number
        url:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
          nullable: true
    Player:
      type: object
      required:
        - id
        - sportId
        - name
        - createdAt
        - updatedAt
      properties:
        id:
          type: integer
        sportId:
          type: integer
        name:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
          nullable: true
    EventTeam:
      type: object
      required:
        - id
        - championshipId
        - homeTeamId
        - awayTeamId
        - eventDate
        - locationId
        - sportId
        - createdAt
        - updatedAt
        - awayTeam
        - homeTeam
        - championship
        - location
        - tickets
        - sport
      properties:
        id:
          type: string
        championshipId:
          type: integer
        homeTeamId:
          type: integer
        awayTeamId:
          type: integer
        eventDate:
          type: string
          format: date-time
        locationId:
          type: integer
        sportId:
          type: integer
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
          nullable: true
        awayTeam:
          $ref: "#/components/schemas/Team"
        homeTeam:
          $ref: "#/components/schemas/Team"
        tickets:
          type: array
          items:
            $ref: "#/components/schemas/Ticket"
        championship:
          $ref: "#/components/schemas/Championship"
        location:
          $ref: "#/components/schemas/Location"
        sport:
          $ref: "#/components/schemas/Sport"
    EventPlayer:
      type: object
      required:
        - id
        - championshipId
        - player1
        - player2
        - eventDate
        - locationId
        - sportId
        - createdAt
        - updatedAt
        - championship
        - location
        - sport
        - tickets
      properties:
        id:
          type: string
        championshipId:
          type: integer
        player1:
          $ref: "#/components/schemas/Player"
        player2:
          $ref: "#/components/schemas/Player"
        eventDate:
          type: string
          format: date-time
        locationId:
          type: integer
        sportId:
          type: integer
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
          nullable: true
        championship:
          $ref: "#/components/schemas/Championship"
        location:
          $ref: "#/components/schemas/Location"
        sport:
          $ref: "#/components/schemas/Sport"
        tickets:
          type: array
          items:
            $ref: "#/components/schemas/Ticket"
    EventGeneric:
      type: object
      required:
        - id
        - name
        - icon
        - eventDate
        - locationId
        - sportId
        - createdAt
        - updatedAt
        - tickets
        - location
        - sport
      properties:
        id:
          type: string
        name:
          type: string
        icon:
          type: string
          format: uri
        eventDate:
          type: string
          format: date-time
        locationId:
          type: integer
        sportId:
          type: integer
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
          nullable: true
        tickets:
          type: array
          items:
            $ref: "#/components/schemas/Ticket"
        location:
          $ref: "#/components/schemas/Location"
        sport:
          $ref: "#/components/schemas/Sport"
    Ticketing:
      type: object
      required:
        - id
        - name
        - icon
        - createdAt
        - updatedAt
      properties:
        id:
          type: integer
        name:
          type: string
        icon:
          type: string
          format: uri
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
          nullable: true
    Event:
      oneOf:
        - $ref: "#/components/schemas/EventTeam"
        - $ref: "#/components/schemas/EventPlayer"
        - $ref: "#/components/schemas/EventGeneric"
    SearchTeam:
      type: object
      required:
        - id
        - name
        - icon
      properties:
        id:
          type: number
        name:
          type: string
        icon:
          type: string
          format: uri
    SearchEvent:
      type: object
      required:
        - id
        - name
        - icon
      properties:
        id:
          type: string
        name:
          type: string
        icon:
          type: string
          format: uri
    TeamDetail:
      type: object
      required:
        - id
        - name
        - sportId
        - locationId
        - icon
        - championshipsId
        - createdAt
        - location
        - awayEvents
        - homeEvents
        - sport
        - championships
      properties:
        id:
          type: integer
        name:
          type: string
        sportId:
          type: integer
        locationId:
          type: integer
        icon:
          type: string
        championshipsId:
          type: array
          items:
            type: integer
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
          nullable: true
        location:
          $ref: "#/components/schemas/Location"
        awayEvents:
          type: array
          items:
            $ref: "#/components/schemas/EventTeam"
        homeEvents:
          type: array
          items:
            $ref: "#/components/schemas/EventTeam"
        sport:
          $ref: "#/components/schemas/Sport"
        championships:
          type: array
          items:
            $ref: "#/components/schemas/Championship"
